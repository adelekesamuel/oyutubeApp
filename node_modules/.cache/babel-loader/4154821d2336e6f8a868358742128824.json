{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Samuel\\\\Desktop\\\\tech studio\\\\youtube app(react)\\\\src\\\\App.js\";\nimport React from 'react';\nimport { Grid } from '@material-ui/core';\nimport { SearchBar, VideoDetail, VideoList } from '..';\nimport youtube from './api/youtube'; // import SearchBar from './components/SearchBar'\n// import VideoList from './components/VideoList'\n// import VideoDetail from './components/VideoDetail'\n\nclass App extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      video: [],\n      selectedVideo: null\n    };\n\n    this.handleSubmit = async searchTerm => {\n      const response = await youtube.get('search', {\n        Params: {\n          part: 'snippet',\n          maxResults: 5,\n          key: 'AIzaSyBnA6kIs6P8rnnEb4anz8VZQ23Y6kV2ook',\n          q: searchTerm\n        }\n      });\n      this.setState({\n        videos: response.data.items,\n        selectedVideo: response.data.items[0]\n      });\n    };\n  }\n\n  render() {\n    const _this$state = this.state,\n          selectedVideo = _this$state.selectedVideo,\n          videos = _this$state.videos;\n    return React.createElement(Grid, {\n      justify: \"center\",\n      container: true,\n      spacing: 10,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, React.createElement(SearchBar, {\n      onFormSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    })), React.createElement(Grid, {\n      item: true,\n      xs: 8,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, React.createElement(VideoDetail, {\n      video: selectedVideo,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    })), React.createElement(Grid, {\n      item: true,\n      xs: 4,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, React.createElement(VideoList, {\n      videos: videos,\n      onVideoSelect: this.onVideoSelect,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }))));\n  }\n\n} // const App = () => {\n//     return (<h1>Youtube clone App</h1>)\n// }\n\n\nexport default App;","map":{"version":3,"sources":["C:/Users/Samuel/Desktop/tech studio/youtube app(react)/src/App.js"],"names":["React","Grid","SearchBar","VideoDetail","VideoList","youtube","App","Component","state","video","selectedVideo","handleSubmit","searchTerm","response","get","Params","part","maxResults","key","q","setState","videos","data","items","render","onVideoSelect"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SAASC,IAAT,QAAqB,mBAArB;AAEA,SAASC,SAAT,EAAoBC,WAApB,EAAiCC,SAAjC,QAAkD,IAAlD;AAEA,OAAOC,OAAP,MAAoB,eAApB,C,CAEA;AACA;AACA;;AAGA,MAAMC,GAAN,SAAkBN,KAAK,CAACO,SAAxB,CAAkC;AAAA;AAAA;AAAA,SAC9BC,KAD8B,GACtB;AACJC,MAAAA,KAAK,EAAE,EADH;AAEJC,MAAAA,aAAa,EAAE;AAFX,KADsB;;AAAA,SAM9BC,YAN8B,GAMf,MAAOC,UAAP,IAAsB;AACjC,YAAMC,QAAQ,GAAG,MAAMR,OAAO,CAACS,GAAR,CAAY,QAAZ,EAAsB;AACzCC,QAAAA,MAAM,EAAE;AACJC,UAAAA,IAAI,EAAE,SADF;AAEJC,UAAAA,UAAU,EAAE,CAFR;AAGJC,UAAAA,GAAG,EAAE,yCAHD;AAIJC,UAAAA,CAAC,EAAEP;AAJC;AADiC,OAAtB,CAAvB;AASA,WAAKQ,QAAL,CAAc;AAAEC,QAAAA,MAAM,EAAER,QAAQ,CAACS,IAAT,CAAcC,KAAxB;AAA+Bb,QAAAA,aAAa,EAAEG,QAAQ,CAACS,IAAT,CAAcC,KAAd,CAAoB,CAApB;AAA9C,OAAd;AACH,KAjB6B;AAAA;;AAmB9BC,EAAAA,MAAM,GAAG;AAAA,wBAC6B,KAAKhB,KADlC;AAAA,UACGE,aADH,eACGA,aADH;AAAA,UACkBW,MADlB,eACkBA,MADlB;AAEL,WACI,oBAAC,IAAD;AAAM,MAAA,OAAO,EAAC,QAAd;AAAuB,MAAA,SAAS,MAAhC;AAAiC,MAAA,OAAO,EAAE,EAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,IAAD;AAAM,MAAA,IAAI,MAAV;AAAW,MAAA,EAAE,EAAE,EAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,IAAD;AAAM,MAAA,IAAI,MAAV;AAAW,MAAA,EAAE,EAAE,EAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,SAAD;AAAW,MAAA,YAAY,EAAE,KAAKV,YAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CADJ,EAII,oBAAC,IAAD;AAAM,MAAA,IAAI,MAAV;AAAW,MAAA,EAAE,EAAE,CAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,WAAD;AAAa,MAAA,KAAK,EAAKD,aAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CAJJ,EAOI,oBAAC,IAAD;AAAM,MAAA,IAAI,MAAV;AAAW,MAAA,EAAE,EAAE,CAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,SAAD;AAAW,MAAA,MAAM,EAAEW,MAAnB;AAA2B,MAAA,aAAa,EAAE,KAAKI,aAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CAPJ,CADJ,CADJ;AAeH;;AApC6B,C,CAuClC;AACA;AACA;;;AAEA,eAAenB,GAAf","sourcesContent":["import React from 'react';\r\n\r\nimport { Grid } from '@material-ui/core';\r\n\r\nimport { SearchBar, VideoDetail, VideoList } from '..';\r\n\r\nimport youtube from './api/youtube'\r\n\r\n// import SearchBar from './components/SearchBar'\r\n// import VideoList from './components/VideoList'\r\n// import VideoDetail from './components/VideoDetail'\r\n\r\n\r\nclass App extends React.Component {\r\n    state = {\r\n        video: [],\r\n        selectedVideo: null,\r\n    }\r\n\r\n    handleSubmit = async (searchTerm) => {\r\n        const response = await youtube.get('search', {\r\n            Params: {\r\n                part: 'snippet',\r\n                maxResults: 5,\r\n                key: 'AIzaSyBnA6kIs6P8rnnEb4anz8VZQ23Y6kV2ook',\r\n                q: searchTerm,\r\n            }\r\n        });\r\n\r\n        this.setState({ videos: response.data.items, selectedVideo: response.data.items[0] });\r\n    }\r\n\r\n    render() {\r\n        const { selectedVideo, videos } = this.state;\r\n        return (\r\n            <Grid justify=\"center\" container spacing={10}>\r\n                <Grid item xs={12}>\r\n                    <Grid item xs={12}>\r\n                        <SearchBar onFormSubmit={this.handleSubmit} />\r\n                    </Grid>\r\n                    <Grid item xs={8}>\r\n                        <VideoDetail video = { selectedVideo } />\r\n                    </Grid>\r\n                    <Grid item xs={4}>\r\n                        <VideoList videos={videos} onVideoSelect={this.onVideoSelect}/>\r\n                    </Grid>\r\n                </Grid>\r\n            </Grid>\r\n        )\r\n    }\r\n}\r\n\r\n// const App = () => {\r\n//     return (<h1>Youtube clone App</h1>)\r\n// }\r\n\r\nexport default App;"]},"metadata":{},"sourceType":"module"}
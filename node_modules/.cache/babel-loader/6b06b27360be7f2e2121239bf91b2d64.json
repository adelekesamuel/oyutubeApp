{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Samuel\\\\Desktop\\\\tech studio\\\\youtube app(react)\\\\src\\\\App.js\";\nimport React from 'react';\nimport { Grid } from '@material-ui/core';\nimport { SearchBar, VideoDetail, VideoList } from './components';\nimport youtube from './api/youtube';\n\nclass App extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      videos: [],\n      selectedVideo: null\n    };\n\n    this.onVideoSelect = video => {\n      this.setState({\n        selectedVideo: video\n      });\n    };\n\n    this.handleSubmit = async searchTerm => {\n      const _ref = await youtube.get(\"search\", {\n        params: {\n          part: \"snippet\",\n          maxResults: 5,\n          key: 'AIzaSyBnA6kIs6P8rnnEb4anz8VZQ23Y6kV2ook',\n          q: searchTerm\n        }\n      }),\n            videos = _ref.data.items;\n\n      setVideos(videos);\n      setSelectedVideo(videos[0]);\n    };\n  }\n\n  // life cycle method\n  componentDidMount() {\n    this.handleSubmit('pdf generation with react and node');\n  }\n\n  render() {\n    const _this$state = this.state,\n          selectedVideo = _this$state.selectedVideo,\n          videos = _this$state.videos;\n    return React.createElement(Grid, {\n      justify: \"center\",\n      container: true,\n      spacing: 10,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, React.createElement(SearchBar, {\n      onFormSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    })), React.createElement(Grid, {\n      item: true,\n      xs: 8,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, React.createElement(VideoDetail, {\n      video: selectedVideo,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    })), React.createElement(Grid, {\n      item: true,\n      xs: 4,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, React.createElement(VideoList, {\n      videos: videos,\n      onVideoSelect: this.onVideoSelect,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }))));\n  }\n\n} // const App = () => {\n//     return (<h1>Youtube clone App</h1>)\n// }\n\n\nexport default App;","map":{"version":3,"sources":["C:/Users/Samuel/Desktop/tech studio/youtube app(react)/src/App.js"],"names":["React","Grid","SearchBar","VideoDetail","VideoList","youtube","App","Component","state","videos","selectedVideo","onVideoSelect","video","setState","handleSubmit","searchTerm","get","params","part","maxResults","key","q","data","items","setVideos","setSelectedVideo","componentDidMount","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SAASC,IAAT,QAAqB,mBAArB;AAEA,SAASC,SAAT,EAAoBC,WAApB,EAAiCC,SAAjC,QAAkD,cAAlD;AAEA,OAAOC,OAAP,MAAoB,eAApB;;AAGA,MAAMC,GAAN,SAAkBN,KAAK,CAACO,SAAxB,CAAkC;AAAA;AAAA;AAAA,SAC9BC,KAD8B,GACtB;AACJC,MAAAA,MAAM,EAAE,EADJ;AAEJC,MAAAA,aAAa,EAAE;AAFX,KADsB;;AAAA,SAW9BC,aAX8B,GAWbC,KAAD,IAAW;AACvB,WAAKC,QAAL,CAAc;AAAEH,QAAAA,aAAa,EAAEE;AAAjB,OAAd;AACH,KAb6B;;AAAA,SA4B9BE,YA5B8B,GA4Bf,MAAOC,UAAP,IAAsB;AAAA,mBACC,MAAMV,OAAO,CAACW,GAAR,CAAY,QAAZ,EAAsB;AAC9DC,QAAAA,MAAM,EAAE;AACNC,UAAAA,IAAI,EAAE,SADA;AAENC,UAAAA,UAAU,EAAE,CAFN;AAGNC,UAAAA,GAAG,EAAE,yCAHC;AAINC,UAAAA,CAAC,EAAEN;AAJG;AADsD,OAAtB,CADP;AAAA,YACZN,MADY,QAC3Ba,IAD2B,CACnBC,KADmB;;AAUnCC,MAAAA,SAAS,CAACf,MAAD,CAAT;AACAgB,MAAAA,gBAAgB,CAAChB,MAAM,CAAC,CAAD,CAAP,CAAhB;AACD,KAxC6B;AAAA;;AAM9B;AACAiB,EAAAA,iBAAiB,GAAG;AAChB,SAAKZ,YAAL,CAAkB,oCAAlB;AACH;;AAiCDa,EAAAA,MAAM,GAAG;AAAA,wBAC6B,KAAKnB,KADlC;AAAA,UACGE,aADH,eACGA,aADH;AAAA,UACkBD,MADlB,eACkBA,MADlB;AAEL,WACI,oBAAC,IAAD;AAAM,MAAA,OAAO,EAAC,QAAd;AAAuB,MAAA,SAAS,MAAhC;AAAiC,MAAA,OAAO,EAAE,EAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,IAAD;AAAM,MAAA,IAAI,MAAV;AAAW,MAAA,EAAE,EAAE,EAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,IAAD;AAAM,MAAA,IAAI,MAAV;AAAW,MAAA,EAAE,EAAE,EAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,SAAD;AAAW,MAAA,YAAY,EAAE,KAAKK,YAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CADJ,EAII,oBAAC,IAAD;AAAM,MAAA,IAAI,MAAV;AAAW,MAAA,EAAE,EAAE,CAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,WAAD;AAAa,MAAA,KAAK,EAAKJ,aAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CAJJ,EAOI,oBAAC,IAAD;AAAM,MAAA,IAAI,MAAV;AAAW,MAAA,EAAE,EAAE,CAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,SAAD;AAAW,MAAA,MAAM,EAAED,MAAnB;AAA2B,MAAA,aAAa,EAAE,KAAKE,aAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CAPJ,CADJ,CADJ;AAeH;;AA3D6B,C,CA8DlC;AACA;AACA;;;AAEA,eAAeL,GAAf","sourcesContent":["import React from 'react';\r\n\r\nimport { Grid } from '@material-ui/core';\r\n\r\nimport { SearchBar, VideoDetail, VideoList } from './components';\r\n\r\nimport youtube from './api/youtube'\r\n\r\n\r\nclass App extends React.Component {\r\n    state = {\r\n        videos: [],\r\n        selectedVideo: null,\r\n    }\r\n\r\n    // life cycle method\r\n    componentDidMount() {\r\n        this.handleSubmit('pdf generation with react and node')\r\n    }\r\n\r\n    onVideoSelect = (video) => {\r\n        this.setState({ selectedVideo: video });\r\n    }\r\n\r\n    // handleSubmit = async (searchTerm) => {\r\n    //     const response = await youtube.get(\"search\", {\r\n    //         Params: {\r\n    //             part: \"snippet\",\r\n    //             maxResults: 5,\r\n    //             key: 'AIzaSyBnA6kIs6P8rnnEb4anz8VZQ23Y6kV2ook',\r\n    //             q: searchTerm,\r\n    //         }\r\n    //     });\r\n\r\n    //     this.setState({ videos: response.data.items, selectedVideo: response.data.items[0] });\r\n    // }\r\n  \r\n    handleSubmit = async (searchTerm) => {\r\n      const { data: { items: videos } } = await youtube.get(\"search\", {\r\n        params: {\r\n          part: \"snippet\",\r\n          maxResults: 5,\r\n          key: 'AIzaSyBnA6kIs6P8rnnEb4anz8VZQ23Y6kV2ook',\r\n          q: searchTerm,\r\n        }\r\n      });\r\n  \r\n      setVideos(videos);\r\n      setSelectedVideo(videos[0]);\r\n    }\r\n\r\n    render() {\r\n        const { selectedVideo, videos } = this.state;\r\n        return (\r\n            <Grid justify=\"center\" container spacing={10}>\r\n                <Grid item xs={12}>\r\n                    <Grid item xs={12}>\r\n                        <SearchBar onFormSubmit={this.handleSubmit} />\r\n                    </Grid>\r\n                    <Grid item xs={8}>\r\n                        <VideoDetail video = { selectedVideo } />\r\n                    </Grid>\r\n                    <Grid item xs={4}>\r\n                        <VideoList videos={videos} onVideoSelect={this.onVideoSelect}/> \r\n                    </Grid>\r\n                </Grid>\r\n            </Grid>\r\n        )\r\n    }\r\n}\r\n\r\n// const App = () => {\r\n//     return (<h1>Youtube clone App</h1>)\r\n// }\r\n\r\nexport default App;"]},"metadata":{},"sourceType":"module"}
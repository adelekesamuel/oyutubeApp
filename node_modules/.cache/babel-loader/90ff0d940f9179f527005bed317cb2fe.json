{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Samuel\\\\Desktop\\\\tech studio\\\\youtube app(react)\\\\src\\\\App.js\";\nimport React from 'react';\nimport { Grid } from '@material-ui/core';\nimport { SearchBar, VideoDetail, VideoList } from './components';\nimport youtube from './api/youtube';\n\nclass App extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      videos: [],\n      selectedVideo: null\n    };\n\n    this.onVideoSelect = video => {\n      this.setState({\n        selectedVideo: video\n      });\n    };\n  }\n\n  // life cycle method\n  componentDidMount() {\n    this.handleSubmit('pdf generation with react and node');\n  }\n\n  // handleSubmit = async (searchTerm) => {\n  //     const response = await youtube.get(\"search\", {\n  //         Params: {\n  //             part: \"snippet\",\n  //             maxResults: 5,\n  //             key: 'AIzaSyBnA6kIs6P8rnnEb4anz8VZQ23Y6kV2ook',\n  //             q: searchTerm,\n  //         }\n  //     });\n  //     this.setState({ videos: response.data.items, selectedVideo: response.data.items[0] });\n  // }\n  render() {\n    const _this$state = this.state,\n          selectedVideo = _this$state.selectedVideo,\n          videos = _this$state.videos;\n    return React.createElement(Grid, {\n      justify: \"center\",\n      container: true,\n      spacing: 10,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, React.createElement(SearchBar, {\n      onFormSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    })), React.createElement(Grid, {\n      item: true,\n      xs: 8,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, React.createElement(VideoDetail, {\n      video: selectedVideo,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    })), React.createElement(Grid, {\n      item: true,\n      xs: 4,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, React.createElement(VideoList, {\n      videos: videos,\n      onVideoSelect: this.onVideoSelect,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }))));\n  }\n\n} // const App = () => {\n//     return (<h1>Youtube clone App</h1>)\n// }\n\n\nexport default App;","map":{"version":3,"sources":["C:/Users/Samuel/Desktop/tech studio/youtube app(react)/src/App.js"],"names":["React","Grid","SearchBar","VideoDetail","VideoList","youtube","App","Component","state","videos","selectedVideo","onVideoSelect","video","setState","componentDidMount","handleSubmit","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SAASC,IAAT,QAAqB,mBAArB;AAEA,SAASC,SAAT,EAAoBC,WAApB,EAAiCC,SAAjC,QAAkD,cAAlD;AAEA,OAAOC,OAAP,MAAoB,eAApB;;AAGA,MAAMC,GAAN,SAAkBN,KAAK,CAACO,SAAxB,CAAkC;AAAA;AAAA;AAAA,SAC9BC,KAD8B,GACtB;AACJC,MAAAA,MAAM,EAAE,EADJ;AAEJC,MAAAA,aAAa,EAAE;AAFX,KADsB;;AAAA,SAW9BC,aAX8B,GAWbC,KAAD,IAAW;AACvB,WAAKC,QAAL,CAAc;AAAEH,QAAAA,aAAa,EAAEE;AAAjB,OAAd;AACH,KAb6B;AAAA;;AAM9B;AACAE,EAAAA,iBAAiB,GAAG;AAChB,SAAKC,YAAL,CAAkB,oCAAlB;AACH;;AAMD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAIAC,EAAAA,MAAM,GAAG;AAAA,wBAC6B,KAAKR,KADlC;AAAA,UACGE,aADH,eACGA,aADH;AAAA,UACkBD,MADlB,eACkBA,MADlB;AAEL,WACI,oBAAC,IAAD;AAAM,MAAA,OAAO,EAAC,QAAd;AAAuB,MAAA,SAAS,MAAhC;AAAiC,MAAA,OAAO,EAAE,EAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,IAAD;AAAM,MAAA,IAAI,MAAV;AAAW,MAAA,EAAE,EAAE,EAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,IAAD;AAAM,MAAA,IAAI,MAAV;AAAW,MAAA,EAAE,EAAE,EAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,SAAD;AAAW,MAAA,YAAY,EAAE,KAAKM,YAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CADJ,EAII,oBAAC,IAAD;AAAM,MAAA,IAAI,MAAV;AAAW,MAAA,EAAE,EAAE,CAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,WAAD;AAAa,MAAA,KAAK,EAAKL,aAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CAJJ,EAOI,oBAAC,IAAD;AAAM,MAAA,IAAI,MAAV;AAAW,MAAA,EAAE,EAAE,CAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,SAAD;AAAW,MAAA,MAAM,EAAED,MAAnB;AAA2B,MAAA,aAAa,EAAE,KAAKE,aAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CAPJ,CADJ,CADJ;AAeH;;AA/C6B,C,CAkDlC;AACA;AACA;;;AAEA,eAAeL,GAAf","sourcesContent":["import React from 'react';\r\n\r\nimport { Grid } from '@material-ui/core';\r\n\r\nimport { SearchBar, VideoDetail, VideoList } from './components';\r\n\r\nimport youtube from './api/youtube'\r\n\r\n\r\nclass App extends React.Component {\r\n    state = {\r\n        videos: [],\r\n        selectedVideo: null,\r\n    }\r\n\r\n    // life cycle method\r\n    componentDidMount() {\r\n        this.handleSubmit('pdf generation with react and node')\r\n    }\r\n\r\n    onVideoSelect = (video) => {\r\n        this.setState({ selectedVideo: video });\r\n    }\r\n\r\n    // handleSubmit = async (searchTerm) => {\r\n    //     const response = await youtube.get(\"search\", {\r\n    //         Params: {\r\n    //             part: \"snippet\",\r\n    //             maxResults: 5,\r\n    //             key: 'AIzaSyBnA6kIs6P8rnnEb4anz8VZQ23Y6kV2ook',\r\n    //             q: searchTerm,\r\n    //         }\r\n    //     });\r\n\r\n    //     this.setState({ videos: response.data.items, selectedVideo: response.data.items[0] });\r\n    // }\r\n  \r\n  \r\n\r\n    render() {\r\n        const { selectedVideo, videos } = this.state;\r\n        return (\r\n            <Grid justify=\"center\" container spacing={10}>\r\n                <Grid item xs={12}>\r\n                    <Grid item xs={12}>\r\n                        <SearchBar onFormSubmit={this.handleSubmit} />\r\n                    </Grid>\r\n                    <Grid item xs={8}>\r\n                        <VideoDetail video = { selectedVideo } />\r\n                    </Grid>\r\n                    <Grid item xs={4}>\r\n                        <VideoList videos={videos} onVideoSelect={this.onVideoSelect}/> \r\n                    </Grid>\r\n                </Grid>\r\n            </Grid>\r\n        )\r\n    }\r\n}\r\n\r\n// const App = () => {\r\n//     return (<h1>Youtube clone App</h1>)\r\n// }\r\n\r\nexport default App;"]},"metadata":{},"sourceType":"module"}